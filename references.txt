External References:


Food Pyramid:   "https://cdn1.sph.harvard.edu/wp-content/uploads/sites/30/2012/10/WebMedium.jpg"
Recipe Origins: "https://en.wikipedia.org/wiki/List_of_cuisines"

Food Drop Down Categories: "https://englishstudyhere.com/wp-content/uploads/2018/08/Descriptive-Words-For-FOOD.png"

    - Pyramid: Veggie, Grains, Fats & Oils, Fish, Eggs, Poultry, Nuts, Seeds, Beans, Tofu, 
    - Drinks: Water, 
    - Taste: Sugary, Sweet, Sour, Spicy (Hot), Juicy, Crispy, Fresh, Gooey, Soft, Icy, Ripe, Lemony, Tangy, Savory, 
    
    - Origin: American, Cajun, Chinese, Ethiopian, French, Greek, Indian, Italian, Jamaican, Japanese, Jewish, Korean, Lebanese, Mediterranean, Mexican, Middle Eastern, Native American, New Mexican, Spanish, Taiwanese, Texan, Thai, Turkish, Vietnamese,
        - All Origins: Ainu, Albanian, Argentine, Andhra, Anglo-Indian, Arab, Armenian, Assyrian, Awadhi, Azerbaijani, Balochi, Belarusian, Bangladeshi, Bengali, Berber, Brazilian, British, Buddhist, Bulgarian, Cajun, Cantonese, Caribbean, Chechen, Chinese cuisine, Chinese Islamic, Circassian, Crimean, Tatar, Cypriot, Danish, English, Ethiopian, Eritrean, Estonian, French, Filipino, Georgian, German, Goan, Goan Catholic, Greek, Gujarati, Huderabad, Indian cuisine, Indian Chinese, Indian Singaporean cuisine, Indonesian, Inuit, Irish, Italian-American, Italian cuisine, Jamaican, Jewish, Karnataka, Kazakh, Keralite, Korean, Kurdish, Laotian, Lebanese, Latvian, Lithuanian, Louisiana Creole, Maharashtrian, Mangalorean, Malay, Malaysian Chinese cusine, Malaysian Indian cuisine, Mennonite, Mexican, Mordovian, Mughal, Native American, Nepalese, New Mexican, Nepalese, New Mexican, Odia, Parsi, Pashtun, Polish, Pennsylvania Dutch, Pakistani, Peranakan, Persian, Peruvian, Portuguese, Punjabi, rajasthani, Romanian, Russian, Sami, Serbian, Sindhi, Slovak, Slovenian, Somali, South Indian, Soviet, Spanish, Sri Lankan, Taiwanese, Tatar, Texan, Thai, Turkish, Tamil, Udupi, Ukrainian, Vietnamese, Yamal, Zambian, Zanzibari
    
    - Style : Homestyle, Loaded, Breaded, Bite-Sized, 
    
    - Method: Grilled, Roasted, Braised, Baked, 
    
    - Healthy: Low Sugar, Low Carbs, Low Fat, Low Sodium, Low Cholesterol, Lean, 
    
    - Adj: Satisfying, Tasty,

    //stretch goal: have option to insert each of these into narrativeDescription or saversDescription





USER ACCOUNTS:

username        email       password
---------------------------------------------
liz         liz@liz         liz

kane        kane@kane       kane

helen       helen@helen     helen

zack        zack@zack       zack

swarles     swarles@swarles swarles

jason       jason@jason     jason

andersen    andersen@andersen   andersen




RECIPES:

(1)____________________________________________________________

_id: 5f6a3e097426c26a5c094a30

Honey Mustard Chicken
3
0
45
https://www.evolvingtable.com/wp-content/uploads/2015/12/Honey-Mustard-Baked-Chicken-19.jpg
Beginner

chicken
1
lbs
235

Step 1:
-Set oven to 350' Fahrenheit.
-Cook ${rice} as instructed on box,(best practice, wash ${rice} until water is clear, pour rice into pot and fill water until first knuckle on finger). When the ${rice} is ready line a large pan with the contents. 
-Pour ${1/4} ${cup} of ${water} into pan.
-Carefully pour water across entire pan. 
-Grab your ${24} ${oz} bottle of ${Honey Mustard Sauce} and pour half the contents across rice (zig-zagging), stir well. 
Step 2:
-While ${rice} is cooking, remove {$chicken} from packaging and wash off, then place ${chicken} atop ${rice} in the pan. ${chicken} should be side-by-side, minimal over-lap.
-Grab your ${24} ${oz} bottle of ${Honey Mustard Sauce} and cover pour the remainder of its contents across rice (zig-zagging), DON'T STIR.
Cover with aluminum-foil, place in oven. Bake at ${350} degrees ${Fahrenheit} for ${time-cook}.
With thermometer, check chicken is above 160 degrees, is so remove and serve.

tasty
TAGS: "rice" "chicken" "honey mustard sauce" I love this recipe because it takes very little prep-time and only requires a few ingredients. I cook this most often when we want a simple but ${tasty} meal. 
(2)____________________________________________________________

_id: 5f6a3ed8165fb86ad0381088

Strawberry Chicken Spinach Salad
1
30
https://www.foodiecrush.com/wp-content/uploads/2016/05/Strawberry-and-Avocado-Spinach-Salad-with-Chicken-foodiecrush.com-016.jpg
Recipe Instructions: Whisk together the balsamic dressing and pour half over the chicken. Set the chicken aside to marinate for at least 30 minutes. Once the chicken has had time to soak up some flavor, grill until done. Then, it’s just a matter of assembling the strawberry spinach salad and digging in!

(3)____________________________________________________________

_id: 5f6a4b84454e736c267fc11b

Banana-Berry-Peanutter Smoothie
2
10
https://suebeehomemaker.com/wp-content/uploads/2019/09/backlit-berry-smoothies.jpg
Mix ingredients in a blender and serve.

____________________________________________________________
Green Chile
5
50
https://www.spendwithpennies.com/wp-content/uploads/2019/08/Green-Chili-SpendWithPennies-6.jpg

Recipe Instructions: Broil tomatillos until golden. Sear pork shoulder in a bit of olive oil. Blend sauce ingredients (per recipe below). Simmer until pork is melt in your mouth tender. Like most chili recipes, this is great with toppings! Chili toppers we love include sour cream, jalapenos, green onions and slices of lime. Green chili stew is a meal unto itself but it’s really great with tortillas and of course bread for dipping! Dinner rolls, Garlic Bread or thick slabs of French bread are great for dipping and soaking, but flour tortillas are the standard if you want to keep it real! A hand full of crushed tortilla chips add automatic crunch! Green chili is one of those recipes that that freezes and reheats beautifully! Adjust the flavors by adding a few more chopped green chilis, jalapeños, and some extra salt and pepper to taste. Refrigerate: Leftover green chili will keep in the fridge about 4 days. Reheat on the stovetop or in the microwave. Freeze: Freeze in individual portions for lunches or meals for one in freezer bags or tightly sealed containers. Defrost in the refrigerator overnight and reheat on the stovetop or in the microwave.

____________________________________________________________

Vanilla Latté
1
2
https://www.asweetpeachef.com/wp-content/uploads/2019/03/healthy-vanilla-latte-recipe-683x1024.jpg
Beginner
yummy coffee
____________________________________________________________



RECIPE MODEL DATA

    narrative Description are the recipe's exact instructions, NOT owner's thoughts about dish which will be at tag.text
    narrativeDescription: {type: String, required: false},
            if outside source exists provide it, if source does not exist not required
    imageSource: {type: String, required: false},
            serving size per recipe
    servesPeople: {type: Number, required: true},
            must provide numHours, hours is already filled in NO Option to choose,
            must provide numMinutes, minutes is already filled in NO Option to choose,
    cookTime: [
        {numHours: {type: Number, required: false}},
        {numMinutes: {type: Number, required: true}},
    ],
            restrict to available options ("beginner","intermediate", "expert" )
    skillLevel: {type: String, required: false},
            quantity value should be set to 1, unit value should be set to foodItems.name+"s"
    foodItems: [
        {
            foodName: {type: String, required: false},
            quantity: {type: Number, required: false},
            unit: {type: String, required: false},
            calories: {type: Number, required: false},
        },
        {
            foodName: {type: String, required: false},
            quantity: {type: Number, required: false},
            unit: {type: String, required: false},
            calories: {type: Number, required: false},
        },
    ],
                // totalCalories is a function that sums foodItem.calories
                // DON'T PUT totalCALORIES IN FORM
    
    totalCalories: {type: Number, required: false},
    
                // each recipe should have a tag per foodItem, 
    
    tag: [
        {  //add a minimum requirement of 3 tags
            tagName: {type:String, required: false},
            count: {type: Number, required: false},
            saverDescription: {type: String, required: false},
        },
    ],

        // on save2Nosh recipe.savers = user._id    
    savers: [{
        // reference
        type: mongoose.Schema.Types.ObjectId,
        ref: "User",
            // this will not count the number of users associated with this recipe
    },],
        // the creator the recipe is the owner, the user._id is the value
        // owner gets transferred to Team-Nosh-Admin-User when owner deletes recipe
            // on create/post recipe.owner = user._id
    owner: {
        type: mongoose.Schema.Types.ObjectId,
        ref: "User",
    },


NEW EJS LAYOUT

<form action="/recipe/<%= recipe._id %>?_method=PUT" method="POST">
<form action="" method="POST">

<p>Recipe: <input type="text" name="recipeName" value="<%= recipe.recipeName %>"/></p>
    
<p>Servings: <input type="text" name="servesPeople" value="<%= recipe.servesPeople %>"/></p>
  
<p>Cook Time: <input type="text" name="cookTime" value="<%= recipe.cookTime %>"> minutes</p>

<p>Photo: <input type="url" name="imageSource" value="<%= recipe.imageSource %>"/></p>

<p>Skill Level:<input type="text" name="skillLevel" value="<%= recipe.skillLevel %>"/></p>

<p>Recipe Instructions: <textarea type="text" name="narrativeDescription" value="<%= recipe.narrativeDescription %>"><%= recipe.narrativeDescription %></textarea></p>

  <input type="submit" value="Update Recipe" />
</form>

</section> 

SECOND PORTION OF FORM ON NEW.EJS
<section class="food_item">
    <form action="/recipe/new" method="POST">
      <input type="text" name="foodItem" placeholder="<%= recipeID.foodItem.foodName %>" />
      <input type="text" name="quantity" placeholder="<%= recipeID.foodItem.quantity %>" />
      <input type="text" name="unit" placeholder="<%= recipeID.foodItem.unit %>" />
      <input type="text" name="calories" placeholder="<%= recipeID.foodItem.calories %>" />
      <p>Recipe Instructions: 
          <textarea type="text" name="narrativeDescription" placeholder="Recipe Instructions"></textarea></p>
          
      <input class="btn btn-primary btn-sm" id="button" type="submit" value="Update Item"/>
</form>






<h5>Display The Recipe That was just added BELOW</h5>
<br/><br/>
(HOW THE FORM ABOVE NEEDS TO BE SITUATED)<br/>
Recipe.recipeName  Recipe.servesPeople Savers: savers.userName<br/>
Recipe.imageSource  Recipe.totalCalories  Recipe.skillLevel<br/>
Recipe.narrativeDescription {Recipe.cookTime.numHours  Recipe.cookTime.numMinutes}<br/>

Recipe.foodItems.foodName  Recipe.foodItems.quantity  Recipe.foodItems.unit  Recipe.foodItems.calories  

Recipe.tag.Pyramid  Recipe.tag.Taste  Recipe.tag.Origin  <br/>
Recipe.tag.All Origins  Recipe.tag.Method  Recipe.tag.Healthy  Recipe.tag.Adj  <br/>
Owner: user.userName    <br/>

<br/><br/>
(HOW THE RECIPE NEEDS TO BE DISPLAYED ON SHOW PAGE)<br/>

TYPES OF TAGS:
Recipe.tag.tagName.Pyramid  Recipe.tag.tagName.Taste
Recipe.tag.tagName.Origin  Recipe.tag.tagName.All Origins
Recipe.tag.tagName.Method  Recipe.tag.tagName.Healthy  Recipe.tag.tagName.Adj 

    RECIPE SHOW EJS

            <li>Servings: <% recipe.servesPeople %></li> 
            <li>Cook Time:   <% recipe.cookTime.numHours %>    hours   <% recipe.cookTime.numMinutes %>    minutes</li>
            <li>Photo: <% recipe.imageSource.skillLevel %></li>
            <li>Each food item:  <% recipe.foodItems.foodName %></li>   <% recipe.foodItems.quantity %>     <% recipe.foodItems.unit %>     <% recipe.foodItems.calories %></li>
            
            <li>Recipe Instructions: <% recipe.narrativeDescription %></li>
            Tags: <li><% recipe.tag.tagName %></li>      <li><% recipe.tag.saverDescription %></li>
            
        <%#    <li>Comments: <% recipe. %></li>    %>


/recipe/<%= recipe._id %>?_method=PUT"

      <section class="food_item">
        <form action="/recipe/<%= recipe._id %>?_method=PUT" method="POST">
          <input type="text" name="foodItem" value="<%= foodItem.foodName %>" />
          <input type="text" name="quantity" value="<%= foodItem.quantity %>" />
          <input type="text" name="unit" value="<%= foodItem.unit %>" />
          <input type="text" name="calories" value="<%= foodItem.calories %>" />
          <input class="btn btn-primary btn-sm" id="button" type="submit" value="Update Item"/>
        </form>

      <section class="food_item">
        <form action="/recipe/<%= item._id %>/updateItem?_method=PUT" method="POST">
          <input type="text" name="foodName" value="<%= foodItems.foodName %>" />
          <input type="text" name="quantity" value="<%= foodItems.quantity %>" />
          <input type="text" name="unit" value="<%= foodItems.unit %>" />
          <input type="text" name="calories" value="<%= foodItems.calories %>" />
          <input class="btn btn-primary btn-sm" id="button" type="submit" value="Update Item"/>
        </form>



        EDIT RECIPE:
/recipe/<%= recipe._id %>?_method=PUT

<p>Recipe: <input type="text" name="recipeName" value="recipe.recipeName"/></p>

      <p>Servings: <input type="text" name="servesPeople" value="<%= recipe.servesPeople %>"/></p>
      
      <p>Cook Time: <input type="text" name="cookTime" value="<%= recipe.cookTime %>"> minutes</p>
      
      <p>Photo: <input type="url" name="imageSource" value="<%= recipe.imageSource %>"/></p>
      
      <p>Skill Level:<input type="text" name="skillLevel" value="<%= recipe.skillLevel %>"/></p>
      
      <p>Recipe Instructions: <textarea type="text" name="narrativeDescription" value="<%= recipe.narrativeDescription %>"></textarea><p>
      
        <input type="submit" value="Update Recipe" />





recipe? 🤢 🤮 all recipes here
    <ul>
    <% recipes.forEach(recipe => { %>
        <li>
            <%= recipe.recipeName %>
        </li>
        
    <% }); %>
    </ul>







                <hr>
                <div class="list-group">
                    <% recipe.foodItems.forEach(item => { %>
                        <a href="/recipe/<%= item._id %>/" class="list-group-item list-group-item-action">
                            <%= item.foodName %>: &nbsp&nbsp <%= item.quantity %> <%= item.unit %> &nbsp&nbsp <%= item.calories %>
                        </a>
                        <% }) %>
                        <% if(recipe.foodItems.length === 0) { %>
                            <p>There are no food items yet</p>
                            <% } %>
                        </div>


                <%= recipe.foodItems %>


                <%= recipe.narrativeDescription %>  